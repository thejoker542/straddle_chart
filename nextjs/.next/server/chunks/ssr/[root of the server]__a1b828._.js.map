{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anurag_542/Desktop/Dhan_streamlit-main/nextjs/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anurag_542/Desktop/Dhan_streamlit-main/nextjs/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anurag_542/Desktop/Dhan_streamlit-main/nextjs/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anurag_542/Desktop/Dhan_streamlit-main/nextjs/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useRef } from 'react'\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { ZoomIn, ZoomOut, Home, ChevronDown, Settings, Camera } from 'lucide-react'\nimport * as echarts from 'echarts'\n\nconst BACKEND_URL = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:8000'\n\nconst generateTimeLabels = () => {\n  const labels = []\n  const data1 = []\n  const data2 = []\n  const data3 = []\n  \n  for (let hour = 9; hour <= 15; hour++) {\n    for (let minute = 0; minute < 60; minute += 15) {\n      const time = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`\n      labels.push(time)\n      data1.push([time, 470 + Math.random() * 50])\n      data2.push([time, 12550 + Math.random() * 100])\n      data3.push([time, 12580 + Math.random() * 100])\n    }\n  }\n  return { labels, data1, data2, data3 }\n}\n\nexport default function ModernChart() {\n  const [selectedIndex, setSelectedIndex] = useState(\"NIFTY\")\n  const [selectedStrike, setSelectedStrike] = useState(\"\")\n  const [strikeOptions, setStrikeOptions] = useState<string[]>([])\n  const [currentPrice, setCurrentPrice] = useState<number>(0)\n  const [isLoading, setIsLoading] = useState(false)\n  const [selectedTimeframe, setSelectedTimeframe] = useState(\"1\")\n  const [rawCEData, setRawCEData] = useState<[string, number, number, number, number, number][]>([])\n  const [rawPEData, setRawPEData] = useState<[string, number, number, number, number, number][]>([])\n  const chartRef = useRef<HTMLDivElement>(null)\n  const chartInstance = useRef<echarts.ECharts | null>(null)\n\n  // Mock watchlist data\n  const watchlistData = [\n    { symbol: 'NIFTY', ltp: 23350.80, change: '+41.15', changePct: '+0.18%' },\n    { symbol: 'BANKNIFTY', ltp: 49278.70, change: '+527.00', changePct: '+1.1%' },\n    { symbol: 'FINNIFTY', ltp: 22943.75, change: '+263.65', changePct: '+1.2%' },\n    { symbol: 'SENSEX', ltp: 77042.82, change: '+318.74', changePct: '+0.4%' },\n    { symbol: 'BANKEX', ltp: 55945.06, change: '+617.09', changePct: '+1.1%' },\n  ]\n\n  const fetchStrikePrices = async (index: string) => {\n    try {\n      setIsLoading(true)\n      const response = await fetch(`${BACKEND_URL}/index-strikes/${index}`)\n      if (!response.ok) throw new Error('Failed to fetch strike prices')\n      \n      const data = await response.json()\n      setStrikeOptions(data.strikes)\n      setSelectedStrike(data.default_strike.toString())\n      setCurrentPrice(data.current_price)\n    } catch (error) {\n      console.error('Error fetching strike prices:', error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchStrikePrices(selectedIndex)\n  }, [selectedIndex])\n\n  const isMarketTime = (timestamp: Date) => {\n    // Check if it's a weekday (0 = Sunday, 6 = Saturday)\n    const isWeekday = timestamp.getDay() > 0 && timestamp.getDay() < 6\n    \n    const hours = timestamp.getHours()\n    const minutes = timestamp.getMinutes()\n    const timeValue = hours * 100 + minutes\n\n    // Check if time is between 9:15 AM and 3:30 PM\n    const isDuringMarketHours = timeValue >= 915 && timeValue <= 1530\n    \n    return isWeekday && isDuringMarketHours\n  }\n\n  const formatDate = (dateStr: string) => {\n    const date = new Date(dateStr)\n    return date.toLocaleString('en-IN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false,\n      timeZone: 'Asia/Kolkata'\n    }).replace(',', '')\n  }\n\n  const resampleData = (data: [string, number, number, number, number, number][], timeframeMinutes: number) => {\n    if (!data.length) return []\n    \n    const resampledData: [string, number, number, number, number, number][] = []\n    let currentBatch: [string, number, number, number, number, number][] = []\n    let currentTimestamp = new Date(data[0][0])\n    currentTimestamp.setSeconds(0, 0)\n    \n    // Round down to nearest timeframe interval\n    const minutes = currentTimestamp.getMinutes()\n    const roundedMinutes = Math.floor(minutes / timeframeMinutes) * timeframeMinutes\n    currentTimestamp.setMinutes(roundedMinutes)\n\n    data.forEach((candle) => {\n      const candleTime = new Date(candle[0])\n      \n      // Skip if not during market hours\n      if (!isMarketTime(candleTime)) return\n      \n      const candleTimestamp = candleTime.getTime()\n      const intervalEnd = new Date(currentTimestamp.getTime() + timeframeMinutes * 60000)\n\n      if (candleTimestamp < intervalEnd.getTime()) {\n        currentBatch.push(candle)\n      } else {\n        if (currentBatch.length > 0) {\n          // Calculate OHLCV for the batch\n          const open = currentBatch[0][1]\n          const high = Math.max(...currentBatch.map(c => c[2]))\n          const low = Math.min(...currentBatch.map(c => c[3]))\n          const close = currentBatch[currentBatch.length - 1][4]\n          const volume = currentBatch.reduce((sum, c) => sum + c[5], 0)\n          \n          // Only add if it's during market hours\n          if (isMarketTime(currentTimestamp)) {\n            resampledData.push([\n              formatDate(currentTimestamp.toISOString()),\n              open,\n              high,\n              low,\n              close,\n              volume\n            ])\n          }\n        }\n        // Move to next interval\n        currentTimestamp = new Date(intervalEnd)\n        currentBatch = [candle]\n      }\n    })\n\n    // Handle the last batch\n    if (currentBatch.length > 0 && isMarketTime(currentTimestamp)) {\n      const open = currentBatch[0][1]\n      const high = Math.max(...currentBatch.map(c => c[2]))\n      const low = Math.min(...currentBatch.map(c => c[3]))\n      const close = currentBatch[currentBatch.length - 1][4]\n      const volume = currentBatch.reduce((sum, c) => sum + c[5], 0)\n      \n      resampledData.push([\n        formatDate(currentTimestamp.toISOString()),\n        open,\n        high,\n        low,\n        close,\n        volume\n      ])\n    }\n\n    return resampledData\n  }\n\n  const updateChartWithData = (\n    chartInstance: echarts.ECharts,\n    timestamps: string[],\n    straddleData: any[],\n    resampledCEData: any[],\n    resampledPEData: any[]\n  ) => {\n    // Calculate the range for last 750 points\n    const defaultPoints = 750\n    const startIndex = Math.max(0, timestamps.length - defaultPoints)\n    \n    // Slice the data arrays to show only the last 750 points\n    const visibleTimestamps = timestamps.slice(startIndex)\n    const visibleStraddleData = straddleData.slice(startIndex)\n    const visibleCEData = resampledCEData.slice(startIndex)\n    const visiblePEData = resampledPEData.slice(startIndex)\n\n    chartInstance.setOption({\n      xAxis: {\n        type: 'category',\n        data: visibleTimestamps,\n        boundaryGap: false,\n        axisLine: { show: false },\n        axisTick: { show: false },\n        axisLabel: {\n          formatter: (value: string | number) => {\n            if (typeof value !== 'string') return ''\n            const parts = value.split(' ')\n            if (parts.length !== 2) return ''\n            const [date, time] = parts\n            // Show date only at the start of each day\n            const idx = visibleTimestamps.indexOf(value)\n            const prevDate = idx > 0 ? visibleTimestamps[idx - 1].split(' ')[0] : ''\n            return prevDate !== date ? `${date}\\n${time}` : time\n          },\n          rotate: 0,\n          showMaxLabel: true,\n          interval: (index: number, value: string | number) => {\n            if (typeof value !== 'string') return false\n            const parts = value.split(' ')\n            if (parts.length !== 2) return false\n            const timeValue = parseInt(parts[1].replace(':', ''))\n            return timeValue % 30 === 0 // Show labels every 30 minutes\n          }\n        }\n      },\n      dataZoom: [\n        {\n          type: 'inside',\n          start: 0,\n          end: 100,\n          minValueSpan: 60 * 5 // Minimum 5 minutes of data\n        },\n        {\n          type: 'slider',\n          show: true,\n          start: 0,\n          end: 100,\n          bottom: 10,\n          height: 20,\n          minValueSpan: 60 * 5 // Minimum 5 minutes of data\n        }\n      ],\n      series: [\n        {\n          name: 'Straddle Price',\n          type: 'line',\n          smooth: true,\n          symbol: 'none',\n          data: visibleStraddleData.map(d => d[4]),\n          lineStyle: {\n            width: 2,\n            color: 'rgb(59, 130, 246)'\n          }\n        },\n        {\n          name: 'CE Price',\n          type: 'line',\n          smooth: true,\n          symbol: 'none',\n          data: visibleCEData.map(d => d[4]),\n          lineStyle: {\n            width: 2,\n            color: 'rgb(16, 185, 129)'\n          }\n        },\n        {\n          name: 'PE Price',\n          type: 'line',\n          smooth: true,\n          symbol: 'none',\n          data: visiblePEData.map(d => d[4]),\n          lineStyle: {\n            width: 2,\n            color: 'rgb(249, 115, 22)'\n          }\n        }\n      ]\n    })\n  }\n\n  const handleChartUpdate = async () => {\n    try {\n      setIsLoading(true)\n      const response = await fetch(`${BACKEND_URL}/historical_straddle/${selectedIndex}/${selectedStrike}`)\n      if (!response.ok) throw new Error('Failed to fetch chart data')\n      \n      const data = await response.json()\n      \n      // Store raw data\n      setRawCEData(data.ce_data.data)\n      setRawPEData(data.pe_data.data)\n      \n      // Filter and resample data\n      const timeframeMinutes = parseInt(selectedTimeframe)\n      const resampledCEData = resampleData(data.ce_data.data, timeframeMinutes)\n      const resampledPEData = resampleData(data.pe_data.data, timeframeMinutes)\n      \n      // Calculate straddle data\n      const straddleData = resampledCEData.map((cePoint, index) => {\n        const pePoint = resampledPEData[index]\n        return [\n          cePoint[0],\n          cePoint[1] + pePoint[1], // Open\n          cePoint[2] + pePoint[2], // High\n          cePoint[3] + pePoint[3], // Low\n          cePoint[4] + pePoint[4], // Close\n          cePoint[5] + pePoint[5]  // Volume\n        ]\n      })\n      \n      // Sort straddleData by timestamp ascending\n      straddleData.sort((a, b) => new Date(a[0]).getTime() - new Date(b[0]).getTime())\n\n      if (chartInstance.current) {\n        const timestamps = straddleData.map(d => String(d[0]))\n        updateChartWithData(chartInstance.current, timestamps, straddleData, resampledCEData, resampledPEData)\n      }\n    } catch (error) {\n      console.error('Error updating chart:', error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  // Effect to update chart when timeframe changes\n  useEffect(() => {\n    if (rawCEData.length && rawPEData.length) {\n      const timeframeMinutes = parseInt(selectedTimeframe)\n      const resampledCEData = resampleData(rawCEData, timeframeMinutes)\n      const resampledPEData = resampleData(rawPEData, timeframeMinutes)\n      \n      if (chartInstance.current) {\n        const straddleData = resampledCEData.map((cePoint, index) => {\n          const pePoint = resampledPEData[index]\n          return [\n            cePoint[0],\n            cePoint[1] + pePoint[1],\n            cePoint[2] + pePoint[2],\n            cePoint[3] + pePoint[3],\n            cePoint[4] + pePoint[4],\n            cePoint[5] + pePoint[5]\n          ]\n        })\n\n        const timestamps = straddleData.map(d => String(d[0]))\n        updateChartWithData(chartInstance.current, timestamps, straddleData, resampledCEData, resampledPEData)\n      }\n    }\n  }, [selectedTimeframe, rawCEData, rawPEData])\n\n  useEffect(() => {\n    if (!chartRef.current) return\n\n    chartInstance.current = echarts.init(chartRef.current)\n\n    const option = {\n      tooltip: {\n        trigger: 'axis',\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        borderColor: 'rgba(0, 0, 0, 0.1)',\n        borderWidth: 1,\n        padding: 12,\n        textStyle: {\n          color: '#1a1a1a'\n        },\n        formatter: (params: any) => {\n          const date = params[0].axisValue\n          let result = `<div class=\"font-medium\">${date}</div>`\n          params.forEach((param: any) => {\n            result += `<div class=\"flex items-center gap-2\">\n              <span style=\"color:${param.color}\">${param.seriesName}</span>: \n              <span class=\"font-medium\">${param.value.toFixed(2)}</span>\n            </div>`\n          })\n          return result\n        },\n        axisPointer: {\n          type: 'cross',\n          label: {\n            backgroundColor: '#6a7985'\n          }\n        }\n      },\n      legend: {\n        data: ['Straddle Price', 'CE Price', 'PE Price'],\n        bottom: 0,\n        padding: 20,\n        icon: 'circle'\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '12%',\n        top: '3%',\n        containLabel: true\n      },\n      xAxis: {\n        type: 'category',\n        data: [],\n        boundaryGap: false,\n        axisLine: { show: false },\n        axisTick: { show: false },\n        axisLabel: {\n          formatter: (value: string | number) => {\n            if (typeof value !== 'string') return ''\n            const parts = value.split(' ')\n            return parts[1] || '' // Return time part or empty string\n          },\n          rotate: 0,\n          showMaxLabel: true,\n          interval: (index: number, value: string | number) => {\n            if (typeof value !== 'string') return false\n            const parts = value.split(' ')\n            if (parts.length !== 2) return false\n            const timeValue = parseInt(parts[1].replace(':', ''))\n            return timeValue % 30 === 0 // Show labels every 30 minutes\n          }\n        }\n      },\n      yAxis: [\n        {\n          type: 'value',\n          position: 'right',\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(0, 0, 0, 0.05)'\n            }\n          }\n        }\n      ],\n      dataZoom: [\n        {\n          type: 'inside',\n          start: 0,\n          end: 100,\n          minValueSpan: 60 * 5 // Minimum 5 minutes of data\n        },\n        {\n          type: 'slider',\n          show: true,\n          start: 0,\n          end: 100,\n          bottom: 10,\n          height: 20,\n          minValueSpan: 60 * 5 // Minimum 5 minutes of data\n        }\n      ],\n      series: [\n        {\n          name: 'Straddle Price',\n          type: 'line',\n          smooth: true,\n          symbol: 'none',\n          data: [],\n          lineStyle: {\n            width: 2,\n            color: 'rgb(59, 130, 246)'\n          }\n        },\n        {\n          name: 'CE Price',\n          type: 'line',\n          smooth: true,\n          symbol: 'none',\n          data: [],\n          lineStyle: {\n            width: 2,\n            color: 'rgb(16, 185, 129)'\n          }\n        },\n        {\n          name: 'PE Price',\n          type: 'line',\n          smooth: true,\n          symbol: 'none',\n          data: [],\n          lineStyle: {\n            width: 2,\n            color: 'rgb(249, 115, 22)'\n          }\n        }\n      ]\n    }\n\n    chartInstance.current.setOption(option)\n\n    const handleResize = () => {\n      chartInstance.current?.resize()\n    }\n\n    window.addEventListener('resize', handleResize)\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n      chartInstance.current?.dispose()\n    }\n  }, [])\n\n  const handleZoomIn = () => {\n    if (!chartInstance.current) return\n    const option = chartInstance.current.getOption()\n    const dataZoom = option.dataZoom as { start: number; end: number }[] | undefined\n    if (!dataZoom?.[0]) return\n    \n    const range = dataZoom[0].end - dataZoom[0].start\n    const center = (dataZoom[0].start + dataZoom[0].end) / 2\n    const newRange = range * 0.8\n    \n    chartInstance.current.setOption({\n      dataZoom: [{\n        start: Math.max(0, center - newRange / 2),\n        end: Math.min(100, center + newRange / 2)\n      }]\n    })\n  }\n\n  const handleZoomOut = () => {\n    if (!chartInstance.current) return\n    const option = chartInstance.current.getOption()\n    const dataZoom = option.dataZoom as { start: number; end: number }[] | undefined\n    if (!dataZoom?.[0]) return\n    \n    const range = dataZoom[0].end - dataZoom[0].start\n    const center = (dataZoom[0].start + dataZoom[0].end) / 2\n    const newRange = range * 1.2\n    \n    chartInstance.current.setOption({\n      dataZoom: [{\n        start: Math.max(0, center - newRange / 2),\n        end: Math.min(100, center + newRange / 2)\n      }]\n    })\n  }\n\n  const handleReset = () => {\n    if (!chartInstance.current) return\n    chartInstance.current.setOption({\n      dataZoom: [{\n        start: 0,\n        end: 100\n      }]\n    })\n  }\n\n  return (\n    <div className=\"flex h-screen bg-gray-100\">\n      {/* Watchlist Sidebar */}\n      <div className=\"w-72 bg-white border-r border-gray-200 flex flex-col\">\n        <div className=\"p-4 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <Button variant=\"outline\" className=\"w-1/2\">\n              Add Instrument\n            </Button>\n            <Button variant=\"outline\" className=\"w-1/2 ml-2\">\n              Add Strategy\n            </Button>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm font-medium\">Watchlist 1</span>\n            <Button variant=\"ghost\" size=\"sm\">\n              <Settings className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n        <div className=\"flex-1 overflow-y-auto\">\n          {watchlistData.map((item) => (\n            <div\n              key={item.symbol}\n              className={`p-4 border-b border-gray-100 cursor-pointer hover:bg-gray-50 ${\n                selectedIndex === item.symbol ? 'bg-blue-50' : ''\n              }`}\n              onClick={() => setSelectedIndex(item.symbol)}\n            >\n              <div className=\"flex items-center justify-between\">\n                <span className=\"font-medium\">{item.symbol}</span>\n                <ChevronDown className=\"h-4 w-4 text-gray-500\" />\n              </div>\n              <div className=\"flex items-center justify-between mt-1\">\n                <span className=\"text-lg font-semibold\">{item.ltp}</span>\n                <span className={`text-sm ${\n                  item.change.startsWith('+') ? 'text-green-500' : 'text-red-500'\n                }`}>\n                  {item.change} ({item.changePct})\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col\">\n        {/* Chart Header */}\n        <div className=\"bg-white border-b border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-2xl font-semibold\">{selectedIndex}</span>\n                <span className=\"text-2xl font-semibold text-green-500\">\n                  {currentPrice.toFixed(2)}\n                </span>\n              </div>\n              <div className=\"flex gap-1\">\n                {['1m', '3m', '5m', '15m', '30m', '1h', '1d'].map((tf) => (\n                  <Button\n                    key={tf}\n                    variant={selectedTimeframe === tf.replace(/[a-z]/g, '') ? \"default\" : \"outline\"}\n                    size=\"sm\"\n                    onClick={() => setSelectedTimeframe(tf.replace(/[a-z]/g, ''))}\n                  >\n                    {tf}\n                  </Button>\n                ))}\n              </div>\n            </div>\n            <div className=\"flex gap-2\">\n              <Button variant=\"outline\" size=\"icon\" onClick={handleZoomIn}>\n                <ZoomIn className=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"outline\" size=\"icon\" onClick={handleZoomOut}>\n                <ZoomOut className=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"outline\" size=\"icon\" onClick={handleReset}>\n                <Home className=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"outline\" size=\"icon\">\n                <Camera className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n          <div className=\"flex gap-4\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => handleChartUpdate()}\n              disabled={isLoading || !selectedStrike}\n            >\n              {selectedStrike} CE\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => handleChartUpdate()}\n              disabled={isLoading || !selectedStrike}\n            >\n              {selectedStrike} PE\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => handleChartUpdate()}\n              disabled={isLoading || !selectedStrike}\n            >\n              Straddle\n            </Button>\n          </div>\n        </div>\n\n        {/* Chart Area */}\n        <div className=\"flex-1 p-4\">\n          <Card className=\"h-full\">\n            <CardContent className=\"p-0\">\n              <div className=\"h-full\" ref={chartRef} />\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}